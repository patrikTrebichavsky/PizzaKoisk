// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaKiosk.Model;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(KoiskContext))]
    [Migration("20240123103858_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("PizzaKiosk.Model.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlergensList")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuantityDescription")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("PizzaKiosk.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FulfillmentOption")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Staus")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaKiosk.Model.OrderedIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreeQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderedPizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaidQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuantityDescription")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPriceDecimal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderedPizzaId");

                    b.ToTable("OrderedIngredients");
                });

            modelBuilder.Entity("PizzaKiosk.Model.OrderedPizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedPizzas");
                });

            modelBuilder.Entity("PizzaKiosk.Model.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlergensList")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlergensList = "Vsetky",
                            Description = "Mnamka",
                            IsAvailable = true,
                            Name = "Smakulada",
                            Price = 10000000000m
                        },
                        new
                        {
                            Id = 2,
                            AlergensList = "1",
                            Description = "Mnaminkaa",
                            IsAvailable = true,
                            Name = "Dobrotka",
                            Price = 10m
                        });
                });

            modelBuilder.Entity("PizzaKiosk.Model.PizzaIngredient", b =>
                {
                    b.Property<int>("FreeQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimalQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PizzaID");

                    b.ToTable("PizzasIngredient");
                });

            modelBuilder.Entity("PizzaKiosk.Model.OrderedIngredient", b =>
                {
                    b.HasOne("PizzaKiosk.Model.OrderedPizza", null)
                        .WithMany("OrderedIngredients")
                        .HasForeignKey("OrderedPizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaKiosk.Model.OrderedPizza", b =>
                {
                    b.HasOne("PizzaKiosk.Model.Order", null)
                        .WithMany("OrderedPizzas")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaKiosk.Model.PizzaIngredient", b =>
                {
                    b.HasOne("PizzaKiosk.Model.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaKiosk.Model.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaKiosk.Model.Order", b =>
                {
                    b.Navigation("OrderedPizzas");
                });

            modelBuilder.Entity("PizzaKiosk.Model.OrderedPizza", b =>
                {
                    b.Navigation("OrderedIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
